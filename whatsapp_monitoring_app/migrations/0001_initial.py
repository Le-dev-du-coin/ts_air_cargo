# Generated by Django 5.2.4 on 2025-10-01 19:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WhatsAppMessageAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(help_text='Numéro de téléphone de destination (avec indicatif)', max_length=20)),
                ('source_app', models.CharField(choices=[('agent_chine', 'Agent Chine'), ('agent_mali', 'Agent Mali'), ('admin_chine', 'Admin Chine'), ('admin_mali', 'Admin Mali'), ('client_app', 'Application Client'), ('notifications_app', 'App Notifications'), ('system', 'Système')], help_text="Application qui a déclenché l'envoi", max_length=20)),
                ('message_type', models.CharField(choices=[('account', 'Création de compte'), ('otp', 'Code OTP'), ('system', 'Message système'), ('notification', 'Notification générale'), ('urgent', 'Notification urgente'), ('report', 'Rapport'), ('colis_status', 'Statut colis'), ('lot_status', 'Statut lot'), ('delivery', 'Livraison'), ('marketing', 'Marketing'), ('other', 'Autre')], default='notification', help_text='Type de message', max_length=20)),
                ('category', models.CharField(blank=True, help_text='Catégorie spécifique du message', max_length=50)),
                ('priority', models.IntegerField(choices=[(1, 'Très haute'), (2, 'Haute'), (3, 'Normale'), (4, 'Basse'), (5, 'Très basse')], default=3, help_text='Priorité du message (1=très haute, 5=très basse)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, help_text='Titre du message', max_length=200)),
                ('message_content', models.TextField(help_text='Contenu du message à envoyer')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sending', "En cours d'envoi"), ('sent', 'Envoyé'), ('delivered', 'Livré'), ('read', 'Lu'), ('failed', 'Échec'), ('failed_retry', 'Échec - Retry programmé'), ('failed_final', 'Échec définitif'), ('cancelled', 'Annulé')], default='pending', help_text='Statut actuel du message', max_length=20)),
                ('attempt_count', models.IntegerField(default=0, help_text="Nombre de tentatives d'envoi")),
                ('max_attempts', models.IntegerField(default=3, help_text='Nombre maximum de tentatives', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date et heure de création')),
                ('first_attempt_at', models.DateTimeField(blank=True, help_text='Date et heure de la première tentative', null=True)),
                ('last_attempt_at', models.DateTimeField(blank=True, help_text='Date et heure de la dernière tentative', null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, help_text='Date et heure du prochain retry', null=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text="Date et heure d'envoi réussi", null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Date et heure de livraison confirmée', null=True)),
                ('provider_message_id', models.CharField(blank=True, help_text='ID du message chez le provider (WaChap)', max_length=100)),
                ('provider_response', models.JSONField(default=dict, help_text='Réponse complète du provider')),
                ('error_message', models.TextField(blank=True, help_text="Message d'erreur de la dernière tentative")),
                ('error_code', models.CharField(blank=True, help_text="Code d'erreur du provider", max_length=50)),
                ('sender_role', models.CharField(blank=True, help_text="Rôle de l'expéditeur (pour sélection instance WaChap)", max_length=50)),
                ('region_override', models.CharField(blank=True, help_text='Région forcée (chine/mali)', max_length=20)),
                ('context_data', models.JSONField(default=dict, help_text='Données contextuelles additionnelles')),
                ('retry_delay_seconds', models.IntegerField(default=300, help_text='Délai entre les tentatives (en secondes)')),
                ('exponential_backoff', models.BooleanField(default=True, help_text='Utiliser un délai exponentiel entre les retries')),
                ('user', models.ForeignKey(blank=True, help_text='Utilisateur destinataire du message', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='whatsapp_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tentative WhatsApp',
                'verbose_name_plural': 'Tentatives WhatsApp',
                'db_table': 'whatsapp_monitoring_attempts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppWebhookLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_message_id', models.CharField(help_text='ID du message chez le provider', max_length=100)),
                ('webhook_type', models.CharField(help_text='Type de webhook (status, delivery, read, etc.)', max_length=50)),
                ('status', models.CharField(help_text='Statut reporté par le webhook', max_length=50)),
                ('raw_payload', models.JSONField(help_text='Payload brute du webhook')),
                ('processed', models.BooleanField(default=False, help_text='Webhook traité et appliqué')),
                ('processing_error', models.TextField(blank=True, help_text='Erreur lors du traitement')),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('message_attempt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhooks', to='whatsapp_monitoring_app.whatsappmessageattempt')),
            ],
            options={
                'verbose_name': 'Webhook WhatsApp',
                'verbose_name_plural': 'Webhooks WhatsApp',
                'db_table': 'whatsapp_monitoring_webhooks',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['status', 'created_at'], name='whatsapp_mo_status_0137b6_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['phone_number', 'created_at'], name='whatsapp_mo_phone_n_b16804_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['next_retry_at'], name='whatsapp_mo_next_re_a2d7f4_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['status', 'priority', 'created_at'], name='whatsapp_mo_status_f1a440_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['source_app', 'status'], name='whatsapp_mo_source__def115_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappmessageattempt',
            index=models.Index(fields=['message_type', 'status'], name='whatsapp_mo_message_a5fc14_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappwebhooklog',
            index=models.Index(fields=['provider_message_id'], name='whatsapp_mo_provide_0caecd_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappwebhooklog',
            index=models.Index(fields=['processed', 'received_at'], name='whatsapp_mo_process_6c530b_idx'),
        ),
        migrations.AddIndex(
            model_name='whatsappwebhooklog',
            index=models.Index(fields=['webhook_type', 'received_at'], name='whatsapp_mo_webhook_47611c_idx'),
        ),
    ]
